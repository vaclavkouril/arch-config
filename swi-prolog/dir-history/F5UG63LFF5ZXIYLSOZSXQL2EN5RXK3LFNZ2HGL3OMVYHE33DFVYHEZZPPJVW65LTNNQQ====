_HiStOrY_V2_
load.
:q.
quit.
relace("aaa-aaaa",X,Y).
relace(['a','-','b'],X,Y).
a\040=\040['a'].
a\012\012a.
a\040:-\040['a','b','-','c'].
q.
relace(X,Y,Z).
make.
relace(X,Y,Z).
relace("aaa-aaaa",X,Y).
select("xxxxx",\040X,Y).
select(X,"xxxxx",Y).
select(X,['x','y'],Y).
A\040=\040"xaaa".
A\040=\040[X:Y].
X.
make.
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5]],\040Atributy).
make.
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5]],\040Atributy).
make.
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5]],\040Atributy).
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5,\040poc-6]],\040Atributy).
make.
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5,\040poc-6]],\040Atributy).
make.
extrakce([[barva-oranzova,\040motor-plyn,\040pocet_mist-40],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[barva-modra,\040motor-diesel,\040pocet_kol-6],\012\040\040\040\040\040\040\040\040\040\040\040\040\040[motor-elektro,\040pocet_mist-5,\040poc-6]],\040Atributy).
make.
def(motor-diesel,\040motor-plyn,\040X).
make.
def(motor-diesel,\040motor-plyn,\040X).
make.
def(motor-diesel,\040motor-plyn,\040X).
make.
def(motor-diesel,\040motor-plyn,\040X).
:q.
trans(node(5,\040[node(3,\040[]),\040node(4,\040[node(2,\040[]),\040node(1,\040[])]),\040node(6,\040[])])\012,\040X).
make.
kruznice(og([a,b,c,d,e,f],[f-c,\040e-f,\040c-e,\040d-b,\040b-d]),\040Cykly).
make.
kruznice(og([a,b,c,d,e,f],[f-c,\040e-f,\040c-e,\040d-b,\040b-d]),\040Cykly).
make.
solve(X).
make.
solve(X).
make.
solve(X).
make.
solve(X).
make.
solve(X).
vrstvy(X,\040[[2],[1,4],[3]]).
make.
vrstvy(X,\040[[2],[1,4],[3]]).
;;;;;;;;;;;;;;;;.
make.
vrstvy(X,\040[[2],[1,4],[3]]).
